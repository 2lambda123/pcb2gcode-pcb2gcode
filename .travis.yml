language: cpp
sudo: false

matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['libgtkmm-2.4-dev', 'gerbv', 'moreutils']
      env: COMPILER=g++-4.8 BOOST=1_56_0

    - os: linux
      compiler: gcc
      addons:
        apt:
          packages: ['libgtkmm-2.4-dev', 'gerbv', 'moreutils']
      env: COMPILER=g++-4.8 BOOST=1_66_0

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7', 'libgtkmm-2.4-dev', 'gerbv', 'moreutils']
      env: COMPILER=g++-7 BOOST=1_56_0

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: ['ubuntu-toolchain-r-test']
          packages: ['g++-7', 'libgtkmm-2.4-dev', 'lcov', 'ggcov', 'autopoint', 'automake', 'moreutils']
      env: COMPILER=g++-7 BOOST=1_66_0 ENABLE_CODE_COVERAGE="--enable-code-coverage"

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['libgtkmm-2.4-dev', 'gerbv', 'moreutils']
      env: COMPILER=clang++ BOOST=1_56_0

    - os: linux
      compiler: clang
      addons:
        apt:
          packages: ['libgtkmm-2.4-dev', 'gerbv', 'moreutils']
      env: COMPILER=clang++ BOOST=1_66_0

    - os: osx
      compiler: gcc
      env: COMPILER=g++

    - os: osx
      compiler: clang
      env: COMPILER=clang++

install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then brew update && brew reinstall -s libtool && brew outdated boost || brew upgrade boost && brew install gtkmm gerbv moreutils; fi
  - >
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      for i in {1..5}; do
        wget -T5 -t1 -O "boost_${BOOST}_amd64.tar.xz" "https://github.com/eyal0/pcb2gcode/releases/download/1.3.3/boost_${BOOST}_amd64.tar.xz" && break;
      done &&
      tar xJf "boost_${BOOST}_amd64.tar.xz" &&
      export BOOST_DIR="$PWD/boost"
    fi
  - >
    if [ "${ENABLE_CODE_COVERAGE}" ]; then
      pip install --user cpp-coveralls colour_runner unittest2 termcolor &&
      mkdir .local &&
      export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$PWD/.local/lib/pkgconfig &&
      git clone git://git.geda-project.org/gerbv.git &&
      pushd gerbv &&
      sh autogen.sh &&
      ./configure --disable-update-desktop-database --prefix=$PWD/../.local &&
      make -j 2 &&
      make install &&
      popd &&
      export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$PWD/gerbv/src/.libs;
    fi
  - >
    for i in {1..5}; do
      wget -T5 -t1 -O "parallel-latest.tar.bz2" "http://ftpmirror.gnu.org/parallel/parallel-latest.tar.bz2" && break;
    done &&
    tar xjf "parallel-latest.tar.bz2" &&
    export CXX="$COMPILER"

script:
  - autoreconf -fvi || travis_terminate 1
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then ./configure --disable-dependency-tracking --disable-silent-rules "${ENABLE_CODE_COVERAGE}"; fi || travis_terminate 1
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then ./configure --disable-dependency-tracking --disable-silent-rules --with-boost="$BOOST_DIR" --enable-static-boost "${ENABLE_CODE_COVERAGE}"; fi || travis_terminate 1
  - chronic make -j 2 || travis_terminate 1
  - pushd testing/gerbv_example/ || travis_terminate 1
  - ARGS='--bridges=0.5 --bridgesnum=2 --zbridges=-0.6 --al-front=true --al-back=true --al-probefeed=100 --al-x=15.0000 --al-y=15.0000 --tile-x=3 --tile-y=2' || travis_terminate 1
  - ls | ../../parallel-*/src/parallel -j 2 --halt soon,fail=1 "pushd {}; echo 'Running on {}' ; ../../../pcb2gcode || exit ; popd" || travis_terminate 1
  - popd || travis_terminate 1
  - lcov --directory . -z || true #Ignore errors
  - VERBOSE=1 make -j 2 check || travis_terminate 1
  - if [ "${ENABLE_CODE_COVERAGE}" ]; then ./integration_tests.py; fi || travis_terminate 1

after_success:
  - >
    if [ "${ENABLE_CODE_COVERAGE}" ]; then
      coveralls --verbose --gcov gcov-7 --gcov-options '\-lpr' -E "^${PWD}/(boost|gerbv|.local)/.*" -E ".*_tests.cpp";
    fi
